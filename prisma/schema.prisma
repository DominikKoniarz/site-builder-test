// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Template {
    id          String   @id @default(uuid())
    name        String   @unique @db.VarChar(255)
    description String?  @db.Text
    order       Int      @default(0)
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    variables TemplateVariable[]
    page      Page[]
}

model TemplateVariable {
    id         String       @id @default(uuid())
    name       String       @db.VarChar(255)
    tag        String       @db.VarChar(255)
    type       VariableType
    templateId String       @db.VarChar(255)
    template   Template     @relation(fields: [templateId], references: [id])
    order      Int          @default(0)
    createdAt  DateTime     @default(now())
    updatedAt  DateTime     @updatedAt

    pageVariables                PageVariable[]
    bannerTemplateVariableConfig BannerTemplateVariableConfig?

    @@unique([tag, templateId, name])
}

model BannerTemplateVariableConfig {
    id                 String           @id @default(uuid())
    imageWidth         Int
    imageHeight        Int
    templateVariableId String           @unique @db.VarChar(255)
    templateVariable   TemplateVariable @relation(fields: [templateVariableId], references: [id], onDelete: Cascade)
    createdAt          DateTime         @default(now())
    updatedAt          DateTime         @updatedAt
}

model TextVariable {
    id             String       @id @default(uuid())
    value          String?      @db.Text
    pageVariableId String       @unique @db.VarChar(255)
    pageVariable   PageVariable @relation(fields: [pageVariableId], references: [id])
    createdAt      DateTime     @default(now())
    updatedAt      DateTime     @updatedAt
}

model BannerVariable {
    id             String       @id @default(uuid())
    pageVariableId String       @unique @db.VarChar(255)
    pageVariable   PageVariable @relation(fields: [pageVariableId], references: [id])
    createdAt      DateTime     @default(now())
    updatedAt      DateTime     @updatedAt

    images BannerImage[]
}

model BannerImage {
    id        String         @id @default(uuid())
    imageName String         @db.VarChar(255)
    bannerId  String         @db.VarChar(255)
    banner    BannerVariable @relation(fields: [bannerId], references: [id])
    order     Int
    createdAt DateTime       @default(now())
    updatedAt DateTime       @updatedAt
}

model Page {
    id          String   @id @default(uuid())
    name        String   @unique @db.VarChar(255)
    description String?  @db.Text
    slug        String   @unique @db.VarChar(255)
    templateId  String   @db.VarChar(255)
    template    Template @relation(fields: [templateId], references: [id])
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    variables PageVariable[]
}

model PageVariable {
    id                 String   @id @default(uuid())
    pageId             String
    templateVariableId String
    createdAt          DateTime @default(now())
    updatedAt          DateTime @updatedAt

    page             Page             @relation(fields: [pageId], references: [id])
    templateVariable TemplateVariable @relation(fields: [templateVariableId], references: [id])
    textVariable     TextVariable?
    bannerVariable   BannerVariable?
}

enum VariableType {
    TEXT
    BANNER
}
